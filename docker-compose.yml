services:
  backstage-application:
    container_name: backstage-application
    build:
      context: backstage
#      dockerfile: packages/backend/Dockerfile
      dockerfile: Dockerfile-multistage
      target: runtime
    env_file:
      - .env
    environment:
      POSTGRES_HOST: backstage-postgres
      POSTGRES_USER: backstage
      POSTGRES_PASSWORD: backstage
      POSTGRES_DB: backstage
    depends_on:
      backstage-mkcert:
        condition: service_completed_successfully
    volumes:
      - ./backstage/app-config.yaml:/app/app-config.yaml:ro
      - ./backstage/catalog:/app/catalog:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "3000:3000"
      - "7007:7007"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheaders.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.backstage.entrypoints=http"
      - "traefik.http.routers.backstage.rule=Host(`backstage.test`)"
      - "traefik.http.routers.backstage.middlewares=traefik-https-redirect"
      - "traefik.http.routers.backstage-secure.entrypoints=https"
      - "traefik.http.routers.backstage-secure.rule=Host(`backstage.test`)"
      - "traefik.http.routers.backstage-secure.tls=true"
      - "traefik.http.routers.backstage-secure.tls.domains[0].main=backstage.test"
      - "traefik.http.routers.backstage-secure.tls.domains[0].sans=*.backstage.test"
      - "traefik.http.routers.backstage-secure.service=backstage"
      - "traefik.http.services.backstage.loadbalancer.server.scheme=https"
      - "traefik.http.services.backstage.loadbalancer.server.port=7007"

  backstage-mkcert:
    container_name: backstage-mkcert
    image: webgrip/traefik-local-development-mkcert:latest
    pull_policy: always
    volumes:
      - ~/.config/mkcert:/root/.local/share/mkcert:ro
      - certificate-data:/certificate-data:rw
    entrypoint: [ "/app/entrypoint.sh", "backstage.test" ]

  backstage-postgres:
    container_name: backstage-postgres
    image: postgres:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: backstage
      POSTGRES_PASSWORD: backstage
      POSTGRES_DB: backstage
    ports:
      - "5432:5432"

  structurizr:
    container_name: structurizr
    image: structurizr/lite:latest
    volumes:
      - ./docs/structurizr/config:/usr/local/structurizr/config:ro
      - ./docs/structurizr/workspace:/usr/local/structurizr/workspace
    ports:
      - "9998:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=custom-profile
      - STRUCTURIZR_WORKSPACE_PATH=workspace
    command: ["java", "--enable-native-access=ALL-UNNAMED", "--add-modules=jdk.incubator.vector", "-jar", "/usr/local/structurizr-lite.war"]

networks:
  default:
    external: true
    name: webgrip

volumes:
  certificate-data:
    external: true
  postgres-data:
